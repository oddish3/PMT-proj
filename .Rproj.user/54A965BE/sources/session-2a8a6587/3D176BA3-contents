#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#                   assigning households as predicted poor
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

rm(list=ls())

data <- readRDS(file = "../data/processed/14_data.RData")

# libraries ----
library(dplyr)
library(tidyr)
library(knitr)
library(rlang)

# Define the variables
vars <- c("yhat_pmt_sh_consump", "yhat_pmt_sh_poor_20", "yhat_pmt_sh_pr_poor_20",
          "yhat_pmt_sh_poor_40", "yhat_pmt_sh_pr_poor_40", "yhat_pmt_sh_qr20_cons",
          "yhat_pmt_sh_qr40_cons", "yhat_pmt_sh_qr50_cons", "yhat_w20_sh_cons",
          "yhat_w40_sh_cons", "yhat_w60_sh_cons", "yhat_pmt_sh_ae_consump",
          "yhat_pmt_sh_urb_consump", "yhat_pmt_ext_consump", "yhat_pmt_ex_qr20_cons",
          "yhat_pmt_ex_qr40_cons", "yhat_pmt_ex_qr50_cons", "yhat_w20_cons",
          "yhat_w40_cons", "yhat_w60_cons", "yhat_pmt_fs_consump", "yhat_step_consump",
          "yhat_pmt_com_consump", "yhat_pmt_sh_cons_burk")

# Generate pr20 and pr40 variables
for (var in vars) {
  # For pr20
  data[[paste0("pr20_", var)]] <- ifelse(!is.na(data[[var]]), 0, NA)
  data[[paste0("pr20_", var)]] <- ifelse(data[[var]] <= data$pov_line_20 & !is.na(data[[var]]), 1, data[[paste0("pr20_", var)]])

  # For pr40
  data[[paste0("pr40_", var)]] <- ifelse(!is.na(data[[var]]), 0, NA)
  data[[paste0("pr40_", var)]] <- ifelse(data[[var]] <= data$pov_line_40 & !is.na(data[[var]]), 1, data[[paste0("pr40_", var)]])
}

# Calculate weighted means by country
weighted_means <- data %>%
  dplyr::group_by(country) %>%
  dplyr::summarize(
    pr20_yhat_pmt_sh_consump = weighted.mean(pr20_yhat_pmt_sh_consump, w = hhweight, na.rm = TRUE),
    pr20_yhat_pmt_ext_consump = weighted.mean(pr20_yhat_pmt_ext_consump, w = hhweight, na.rm = TRUE),
    pr40_yhat_pmt_sh_consump = weighted.mean(pr40_yhat_pmt_sh_consump, w = hhweight, na.rm = TRUE),
    pr40_yhat_pmt_ext_consump = weighted.mean(pr40_yhat_pmt_ext_consump, w = hhweight, na.rm = TRUE)
  )

# Transpose the data
transposed_means <- weighted_means %>%
  tidyr::pivot_longer(cols = -country, names_to = "variable", values_to = "value") %>%
  tidyr::pivot_wider(names_from = country, values_from = value)

# Format the results
formatted_results <- transposed_means %>%
  dplyr::mutate(dplyr::across(-variable, ~sprintf("%.3g", .)))

# Print the results in a table format
# print(kable(formatted_results, format = "pipe", align = "r"))

# poverty rates ----
# Calculate weighted means for poor_20 and poor_40
data <- data %>%
  group_by(country) %>%
  mutate(
    poor_20_mean = weighted.mean(poor_20, w = hhweight, na.rm = TRUE),
    poor_40_mean = weighted.mean(poor_40, w = hhweight, na.rm = TRUE)
  ) %>%
  ungroup()

# Summary statistics by country
data %>%
  group_by(country) %>%
  summarise(across(c(poor_20_mean, poor_40_mean), \(x) mean(x, na.rm = TRUE)))

# Define variables
vars <- c("yhat_pmt_sh_consump", "yhat_pmt_sh_poor_20", "yhat_pmt_sh_pr_poor_20",
          "yhat_pmt_sh_poor_40", "yhat_pmt_sh_pr_poor_40", "yhat_pmt_sh_qr20_cons",
          "yhat_pmt_sh_qr40_cons", "yhat_pmt_sh_qr50_cons", "yhat_w20_sh_cons",
          "yhat_w40_sh_cons", "yhat_w60_sh_cons", "yhat_pmt_sh_ae_consump",
          "yhat_pmt_sh_urb_consump", "yhat_pmt_ext_consump", "yhat_w20_cons",
          "yhat_w40_cons", "yhat_w60_cons", "yhat_pmt_fs_consump", "yhat_step_consump",
          "yhat_pmt_com_consump")

# Summary statistics by country for these variables
data %>%
  group_by(country) %>%
  summarise(across(all_of(vars), list(mean = \(x) mean(x, na.rm = TRUE),
                                      sd = \(x) sd(x, na.rm = TRUE))))

# Update vars list
vars <- c("yhat_pmt_sh_consump", "yhat_pmt_sh_poor_20", "yhat_pmt_sh_pr_poor_20",
          "yhat_pmt_sh_poor_40", "yhat_pmt_sh_pr_poor_40", "yhat_pmt_sh_qr20_cons",
          "yhat_pmt_sh_qr40_cons", "yhat_pmt_sh_qr50_cons", "yhat_w20_sh_cons",
          "yhat_w40_sh_cons", "yhat_w60_sh_cons", "yhat_pmt_sh_urb_consump",
          "yhat_pmt_ext_consump", "yhat_pmt_ex_qr20_cons", "yhat_pmt_ex_qr40_cons",
          "yhat_pmt_ex_qr50_cons", "yhat_w20_cons", "yhat_w40_cons", "yhat_w60_cons",
          "yhat_step_consump")

countries <- c("BurkinaFaso", "Ethiopia", "Ghana", "Malawi", "Mali", "Niger", "Nigeria", "Tanzania", "Uganda")

# Function to calculate percentiles
calculate_percentiles <- function(data, var, countries) {
  data %>%
    group_by(country) %>%
    mutate(
      !!paste0("pc_", var) := case_when(
        country %in% countries & !is.na(!!sym(var)) ~
          percent_rank(!!sym(var)) * hhweight / sum(hhweight[!is.na(!!sym(var))]),
        TRUE ~ NA_real_
      )
    ) %>%
    ungroup()
}

# Apply the function to all variables
for (var in vars) {
  data <- calculate_percentiles(data, var, countries)
}

# adult equivalence----

# Function to calculate weighted percentiles
calculate_weighted_percentiles <- function(data, var, countries) {
  data %>%
    group_by(country) %>%
    mutate(
      !!paste0("pc_", var) := case_when(
        country %in% countries & !is.na(!!sym(var)) ~
          (rank(!!sym(var), ties.method = "average") - 1) / (sum(!is.na(!!sym(var))) - 1),
        TRUE ~ NA_real_
      )
    ) %>%
    ungroup()
}

# Adult equivalence
countries_ae <- c("Ethiopia", "Ghana", "Malawi", "Niger", "Tanzania", "Uganda")
data <- calculate_weighted_percentiles(data, "yhat_pmt_sh_ae_consump", countries_ae)

# Food security
countries_fs <- c("BurkinaFaso", "Ethiopia", "Malawi", "Niger", "Nigeria", "Tanzania", "Uganda")
data <- calculate_weighted_percentiles(data, "yhat_pmt_fs_consump", countries_fs)

# Community vars
countries_com <- c("Ethiopia", "Malawi", "Niger", "Nigeria", "Tanzania", "Uganda")
data <- calculate_weighted_percentiles(data, "yhat_pmt_com_consump", countries_com)

# Burkina Faso
countries_burk <- c("BurkinaFaso")
data <- calculate_weighted_percentiles(data, "yhat_pmt_sh_cons_burk", countries_burk)

# Adjust all percentiles to be between 0 and 1
data <- data %>%
  mutate(across(starts_with("pc_"), ~./100))

# generating indicator variable for predicted poor or not  ----

# Define variables
vars <- c("yhat_pmt_sh_consump", "yhat_pmt_sh_poor_20", "yhat_pmt_sh_pr_poor_20",
          "yhat_pmt_sh_poor_40", "yhat_pmt_sh_pr_poor_40", "yhat_pmt_sh_qr20_cons",
          "yhat_pmt_sh_qr40_cons", "yhat_pmt_sh_qr50_cons", "yhat_w20_sh_cons",
          "yhat_w40_sh_cons", "yhat_w60_sh_cons", "yhat_pmt_sh_ae_consump",
          "yhat_pmt_sh_urb_consump", "yhat_pmt_ext_consump", "yhat_pmt_ex_qr20_cons",
          "yhat_pmt_ex_qr40_cons", "yhat_pmt_ex_qr50_cons", "yhat_w20_cons",
          "yhat_w40_cons", "yhat_w60_cons", "yhat_pmt_fs_consump", "yhat_step_consump",
          "yhat_pmt_com_consump", "yhat_pmt_sh_cons_burk")

# Generate indicator variables for predicted poor
data <- data %>%
  mutate(across(all_of(vars),
                list(po20 = ~ifelse(!is.na(.), ifelse(get(paste0("pc_", cur_column())) <= poor_20_mean, 1, 0), NA),
                     po40 = ~ifelse(!is.na(.), ifelse(get(paste0("pc_", cur_column())) <= poor_40_mean, 1, 0), NA)),
                .names = "{.col}_{.fn}")) %>%
  dplyr::select(-starts_with("pc_"))

# checking - mean should be equal to 0.2 or 0.4 ----

check_vars <- c(
  "yhat_pmt_sh_consump", "yhat_pmt_sh_poor_20", "yhat_pmt_sh_pr_poor_20",
  "yhat_pmt_sh_poor_40", "yhat_pmt_sh_pr_poor_40", "yhat_w20_sh_cons",
  "yhat_w40_sh_cons", "yhat_w60_sh_cons", "yhat_pmt_sh_ae_consump",
  "yhat_pmt_sh_urb_consump", "yhat_pmt_ext_consump", "yhat_w20_cons",
  "yhat_w40_cons", "yhat_w60_cons", "yhat_pmt_fs_consump",
  "yhat_step_consump", "yhat_pmt_com_consump"
)

# Create a list of variables to summarize
summary_vars <- unlist(lapply(check_vars, function(var) paste0(var, c("_po20", "_po40"))))

# Perform the summary
check_results <- data %>%
  group_by(country) %>%
  summarize_at(vars(one_of(summary_vars)),
               ~weighted.mean(., w = hhweight, na.rm = TRUE))

print(check_results)


saveRDS(data, file = "data/processed/15_data.RData")
